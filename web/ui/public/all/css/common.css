@layer reset, universal, components, utility;

:root {
	--fs-min: 0.875rem;
	--fs-max: 1.2rem;

	--ff-primary:
		-apple-system,
		BlinkMacSystemFont,
		"Segoe UI",
		Helvetica,
		Arial,
		sans-serif,
		"Apple Color Emoji",
		"Segoe UI Emoji";

	--clr-black-100: hsl(170, 0%, 80%);
	--clr-black-200: hsl(170, 0%, 60%);
	--clr-black-400: hsl(170, 0%, 5%);

	--clr-white-400: hsl(170, 0%, 100%);

	--clr-link-400: LinkText;
	--clr-visited-400: VisitedText;
	--clr-active-400: ActiveText;

	--clr-accent-100: hsl(170, 45%, 97%);
	--clr-accent-400: hsl(170, 45%, 30%);

	--clr-hint-400: hsl(0, 0%, 30%);

	--clr-focus-400: hsl(59, 100%, 95%);

	--clr-invalid-100: hsl(0, 100%, 95%);
	--clr-invalid-400: hsl(0, 100%, 50%);

	--clr-warning-100: hsl(45, 100%, 95%);
	--clr-warning-400: hsl(40, 100%, 50%);

	--clr-danger-100: hsl(0, 45%, 95%);
	--clr-danger-400: hsl(0, 45%, 54%);

	--clr-error-100: hsl(0, 100%, 95%);
	--clr-error-400: hsl(0, 100%, 50%);

	--clr-highlight-100: hsl(43, 100%, 90%);
	--clr-highlight-400: hsl(43, 100%, 85%);

	--icon-external-link: url(
		'data:image/svg+xml,\
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"> \
			<g style="stroke: rgb(35, 82, 124); stroke-width: 1"> \
				<line x1="5" y1="5" x2="5" y2="14" /> \
				<line x1="14" y1="9" x2="14" y2="14" /> \
				<line x1="5" y1="14" x2="14" y2="14" /> \
				<line x1="5" y1="5" x2="9" y2="5" /> \
				<line x1="10" y1="2" x2="17" y2="2"  /> \
				<line x1="17" y1="2" x2="17" y2="9" /> \
				<line x1="10" y1="9" x2="17" y2="2" style="stroke-width: 1.5" /> \
			</g> \
		</svg>'
	);
}

@layer reset {
	*, *::before, *::after {
		box-sizing: border-box;
	}

	html:focus-within {
		scroll-behavior: smooth;
	}

	body {
		margin: 0;
		line-height: 1.3;
		text-rendering: optimizeSpeed;
	}

	img, picture {
		display: block;
		max-inline-size: 100%;
	}

	button, input, select, textarea {
		font: inherit;
	}
}

@layer universal {
	html {
		font-family: var(--ff-primary);
		font-size: var(--fs-min);
	}

	body {
		background: var(--clr-white-400);
		color: var(--clr-black-400);
		padding-inline: 1rem;
	}

	h1 {
		font-size: 1.7rem;
	}

	a {
		color: var(--clr-link-400);
	}

	a:visited {
		color: var(--clr-visited-400);
	}

	a:active {
		color: var(--clr-active-400);
	}

	hr {
		inline-size: 100%;
		border: none;
		border-block-start: 1px solid var(--clr-black-200);
	}

	details {
		margin-block: 0.5rem;
	}

	summary {
		cursor: pointer;
	}

	table {
		border-spacing: 0;
	}

	thead, th {
		position: sticky;
		top: 0;
		background: var(--clr-white-400);
		text-align: left;
		vertical-align: bottom;
		z-index: 1;
	}

	td {
		vertical-align: top;
	}

	th, td {
		padding: 0.5rem 1rem;
	}

	button, input:not([type="checkbox"]), select {
		min-height: 1.5rem;
	}

	textarea {
		resize: vertical;
	}

	input, textarea, select {
		background: var(--clr-white-400);
		border: 1px solid var(--clr-black-200);
		transition: background 300ms;
		max-width: 100%;
	}

	button, input, textarea, select {
		padding-block: 0.4rem;
		padding-inline: 0.6rem;
	}

	button {
		border: none;
	}

	:is(button, input, textarea, select):focus {
		outline: 2px solid var(--clr-link-400);
	}

	:is(input, textarea, select).invalid:placeholder-shown,
	:is(input, textarea, select).invalid:not(:placeholder-shown),
	:is(input:not([type="time"], [type="file"]), textarea):invalid:not(:placeholder-shown),
	[data-invalid] :is(input, textarea, select):invalid {
		background: var(--clr-invalid-100);
		border-color: var(--clr-invalid-400);
	}

	:is(input, textarea, select).invalid:focus,
	:is(input, textarea, select):invalid:focus {
		background: var(--clr-focus-400);
	}

	:is(input, textarea):placeholder-shown {
		background: var(--clr-white-400);
	}

	label.required::after {
		content: "*";
		color: var(--clr-invalid-400);
		margin-inline-start: 0.2em;
	}

	.form,
	form,
	fieldset {
		display: flex;
		flex-direction: column;
		gap: 0.4rem;
	}

	fieldset {
		padding: 0;
		border: none;
	}

	.form > p,
	form > p,
	fieldset > p {
		margin-block: 0.4rem;
	}

	legend {
		font-size: 1.3rem;
		font-weight: bold;
		padding: 0;
		padding-block-end: 0.5rem;
	}

	:is(form, .form) input:not([type="checkbox"]),
	:is(form, .form) textarea,
	:is(form, .form) button {
		display: block;
	}

	label small {
		color: var(--clr-hint-400);
	}

	label small::before {
		content: "(";
	}

	label small::after {
		content: ")";
	}

	a[href^="//"]::after,
	a[href^="http://"]::after,
	a[href^="https://"]::after {
		content: "";
		background-image: var(--icon-external-link);
		background-repeat: no-repeat;
		padding-right: 1rem;
	}
}

@layer components {
	.bag {
		display: flex;
		flex-wrap: wrap;
		flex-direction: row;
		align-items: center;
		gap: 0.5rem;
	}

	.bag.reverse {
		flex-direction: row-reverse;
	}

	.stack {
		display: flex;
		flex-direction: column;
	}

	.stack.reverse {
		flex-direction: column-reverse;
	}

	.warning-box {
		padding-inline: 1rem;
		background: var(--clr-warning-100);
		border: 1px solid var(--clr-warning-400);
	}

	.flash-banner,
	.error-banner,
	.warning-banner {
		margin-block: 1rem;
		padding: 0 1rem;
	}

	.flash-banner {
		background: var(--clr-accent-100);
		border: 1px solid var(--clr-accent-400);
		text-align: center;
	}

	.flash-banner--important {
		background: var(--clr-danger-100);
		border-color: var(--clr-danger-400);
	}

	.warning-banner {
		background: var(--clr-warning-100);
		border: 1px solid var(--clr-warning-400);
	}

	.error {
		color: var(--clr-error-400);
		margin-block: 0;
	}

	.error:empty {
		display: none;
	}

	.error-banner::first-letter,
	.error-banner *::first-letter,
	.error::first-letter,
	.error *::first-letter {
		text-transform: capitalize;
	}

	.error-banner {
		background: var(--clr-error-100);
		border: 1px solid var(--clr-error-400);
		color: var(--clr-black-400);
		text-align: center;
	}

	button, .btn {
		display: inline-block;
		padding-block: 0.4rem;
		padding-inline: 1rem;
		background: var(--clr-accent-400);
		color: var(--clr-white-400);
		text-decoration: none;
		text-align: center;
		cursor: default;
	}

	:is(button, .btn):not([disabled]):hover,
	:is(button, .btn):not([disabled]):focus {
		filter: brightness(1.2);
	}

	:is(button, .btn)[disabled] {
		cursor: not-allowed;
		filter: saturate(0.5);
		opacity: 0.6;
	}

	:is(button, .btn)[disabled]:active {
		pointer-events: none;
	}

	.btn--alt {
		background: var(--clr-white-400);
		color: var(--clr-accent-400);
		outline: 1px solid var(--clr-accent-400);
	}

	.btn--danger {
		background: var(--clr-danger-400);
	}

	.btn--large {
		padding-block: 0.7rem;
		padding-inline: 3rem;
	}

	.btn--link {
		display: inline;
		padding: 0;
		background: transparent;
		color: var(--clr-link-400);
		cursor: pointer;
		text-decoration: underline;
	}

	.btn--link.btn--danger {
		color: var(--clr-danger-400);
	}

	.sign-in-alt {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 0.5rem;
	}

	.sign-in-alt__title {
		display: flex;
		flex-direction: row;
		width: 100%;
		gap: 1rem;
		font-weight: bold;
		text-transform: uppercase;
		color: var(--clr-black-100);
		margin-block-end: 0.5rem;
	}

	.sign-in-alt__title::before,
	.sign-in-alt__title::after {
		content: "";
		flex: 1 1;
		border-bottom: 1px solid var(--clr-black-100);
		margin: auto;
	}

	.g_id_signin {
		display: inline-block;
	}
}

@layer utility {
	.inline-block {
		display: inline-block;
	}

	.inline-flex {
		display: inline-flex;
	}

	.text-italic {
		font-style: italic;
	}

	.text-bold {
		font-weight: bold;
	}

	.text-left {
		text-align: left;
	}

	.text-center {
		text-align: center;
	}

	.text-right {
		text-align: right;
	}

	.no-wrap {
		white-space: nowrap;
	}

	.push-inline-end {
		margin-inline-start: auto;
	}

	.grow {
		flex-grow: 1;
	}

	.align-self-center {
		align-self: center;
	}
}
